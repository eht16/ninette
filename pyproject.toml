[project]
name = "ninette"
authors = [
    { name = "Enrico TrÃ¶ger", email = "enrico.troeger@uvena.de" },
]
description = "A simple alerting system to get notified about important events or breaking news."
readme = "README.md"
license = { text="MIT" }
keywords = [
    "mowas",
    "dwd",
    "nina",
    "warning",
    "alerting",
]
classifiers = [
    "Environment :: No Input/Output (Daemon)",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Communications",
]
requires-python = ">=3.8"
dependencies = [
    "html2text",
    "py-staticmaps",
    "requests",
]
dynamic = ["version"]

[project.scripts]
ninette = "ninette.cli:main"

[project.urls]
"Homepage" = "https://github.com/eht16/ninette"
"Bug Tracker" = "https://github.com/eht16/ninette/issues"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
version = {attr = "ninette.__version__"}

[tool.flakeheaven]
exclude = ['build', '.git', 'docs']
max_line_length = 100
unused-arguments-ignore-abstract-functions = true
unused-arguments-ignore-stub-functions = true

[tool.flakeheaven.plugins]
pyflakes = ["+*"]
pycodestyle = ["+*"]
pylint = ["+*"]
flake8-2020 = ["+*"]
flake8-alfred = ["+*"]
flake8-builtins = ["+*"]
flake8-encodings = ["+*"]
flake8-eradicate = ["+*"]
flake8-executable = ["+*"]
flake8-fixme = ["+*"]
flake8-implicit-str-concat = ["+*"]
flake8-isort = ["+*"]
flake8-literal = ["+*"]
flake8-newspaper-style = ["+*"]
flake8-print = ["+*"]
flake8-secure-coding-standard = ["+*"]
flake8-slots = ["+*"]
#flake8-sql = ["+*"]
flake8-strftime = ["+*"]
flake8-string-format = ["+*"]
flake8-unused-arguments = ["+*"]
flake8-useless-assert = ["+*"]
flake8-warnings = ["+*"]

[tool.isort]
line_length = 100
indent = 4
multi_line_output = 3
length_sort = false
force_alphabetical_sort_within_sections = true
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
lines_after_imports = 2
from_first = true
include_trailing_comma = true

[tool.pylint.main]
ignore = ".git"
persistent = false
load-plugins=[
    "pylint.extensions.bad_builtin",
    "pylint.extensions.check_elif",
    "pylint.extensions.comparetozero",
    "pylint.extensions.emptystring",
    "pylint.extensions.mccabe",
    "pylint.extensions.overlapping_exceptions",
    "pylint.extensions.redefined_variable_type",
]

[tool.pylint.classes]

[tool.pylint.deprecated_builtins]

[tool.pylint.design]
min-public-methods = 0
max-attributes = 15
max-args = 7
max-parents = 9

[tool.pylint.exceptions]
overgeneral-exceptions = []

[tool.pylint.format]
max-line-length = 100

[tool.pylint.imports]

[tool.pylint.logging]

[tool.pylint."messages control"]
disable = [
  "fixme",
  "duplicate-code",
  "empty-docstring",
  "logging-format-interpolation",
  "missing-docstring",
  "no-else-raise",
  "no-else-return",
]

[tool.pylint.method_args]

[tool.pylint.miscellaneous]

[tool.pylint.refactoring]

[tool.pylint.reports]
output-format = "parseable"
reports = false

[tool.pylint.similarities]

[tool.pylint.spelling]

[tool.pylint.string]

[tool.pylint.typecheck]

[tool.pylint.variables]
dummy-variables-rgx = "_|dummy"

